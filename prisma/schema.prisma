// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // Remove the custom output path to use default location
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // For credentials provider
  role          String    @default("user") // Custom field
  status        String    @default("active") // Add this field for user status
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// New models for your learning management system
model Module {
  id          String   @id @default(cuid())
  title       String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  lessons     Lesson[]
  
  @@map("modules")
}

model Lesson {
  id           String   @id @default(cuid())
  title        String
  description  String
  bubbleSpeech String?
  timer        Int      @default(300) // in seconds
  moduleId     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  module       Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  tips         Tip[]
  
  @@map("lessons")
}

model Tip {
  id          String   @id @default(cuid())
  title       String
  description String
  lessonId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  lesson      Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  
  @@map("tips")
}